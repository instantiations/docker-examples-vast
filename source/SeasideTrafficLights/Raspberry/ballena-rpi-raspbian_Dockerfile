FROM balenalib/rpi-alpine

LABEL version="0.2.0"
LABEL maintainer="mpeck@instantiations.com"
LABEL description="VAST SeasideTrafficLight example"


# Comment build and run commands
# docker build -f ./ballena-rpi-raspbian_Dockerfile -t seaside-ballena-rpi-raspbian .
# docker run -e TZ=America/New_York --mount type=bind,source="$(pwd)",target=/opt/log -p 7777:7777 seaside-ballena-rpi-raspbian


# Install Dependencies
# RUN apk --update add --no-cache libc6-compat \
#	&& rm -rf /var/cache/apk/* 

# Install Dependencies
RUN apk --no-cache add ca-certificates wget \
	&& wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \
	&& wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.29-r0/glibc-2.29-r0.apk \
	&& wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.29-r0/glibc-bin-2.29-r0.apk \
	&& wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.29-r0/glibc-i18n-2.29-r0.apk \
	&& apk add glibc-bin-2.29-r0.apk glibc-i18n-2.29-r0.apk glibc-2.29-r0.apk


# Cleanup 
RUN rm -rf /var/cache/apk/* 	
	
# Generate locales	
# RUN /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 \
#	&& /usr/glibc-compat/bin/localedef -i en_US -f ISO-8859- en_US.ISO-8859-1
	

# set working directory
WORKDIR /opt/app

ADD ./vast92 /opt/vast92
ADD ./app /opt/app

RUN mkdir /opt/log

EXPOSE 7777

CMD ["./seasideTrafficLight.sh"]
